{
	"Bot-Command": {
		"scope": "typescript",
		"prefix": "cmd",
		"body": [
			"class $1 extends BotCommand {",
			"\tconstructor() {",
			"\t\tsuper(",
			"\t\t\tnew SlashCommandBuilder()",
			"\t\t\t\t.setName('$2')",
			"\t\t\t\t.setDescription('$3')",
			"\t\t\t\t.toJSON()",
			"\t\t)",
			"\t}",
			"",
			"\tpublic async execute(",
			"\t\tinteraction: CommandInteraction<CacheType>,",
			"\t\tclient: Bot",
			"\t) {",
			"\t\t$4",
			"\t}",
			"}",
			"",
			"export default new $1()",
		]
	},
	"Bot-Event": {
		"scope": "typescript",
		"prefix": "evt",
		"body": [
			"export default class $1 extends BotEvent<'$2'> {",
			"\tconstructor(client: AspectxBot) {",
			"\t\tsuper(client);",
			"\t}",
			"",
			"}",
		]
	}
	
	// Place your Applicator workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}